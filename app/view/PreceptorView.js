/*
 * File: app/view/PreceptorView.js
 *
 * This file was generated by Sencha Architect version 3.0.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('pawu.view.PreceptorView', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.preceptorview',

    requires: [
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.toolbar.Paging',
        'Ext.grid.column.Action',
        'Ext.button.Button'
    ],

    overflowX: 'scroll',
    overflowY: 'scroll',
    bodyBorder: false,
    title: 'My Panel',

    layout: {
        type: 'hbox',
        align: 'stretch'
    },

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    flex: 1.5,
                    frame: true,
                    autoScroll: true,
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    dockedItems: [
                        {
                            xtype: 'gridpanel',
                            flex: 2,
                            dock: 'top',
                            frame: true,
                            height: 150,
                            itemId: 'PreceptorList',
                            autoScroll: true,
                            iconCls: 'homeIcon',
                            title: 'Preceptor List',
                            columnLines: true,
                            forceFit: true,
                            store: 'PreceptorDataStore',
                            viewConfig: {
                                height: 400
                            },
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    width: 200,
                                    dataIndex: 'lastname',
                                    text: 'Lastname'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'firstname',
                                    text: 'Firstname'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'city',
                                    text: 'City'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 60,
                                    dataIndex: 'isactive',
                                    text: 'Isactive'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    width: 30,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                //var rec = grid.getStore().getAt(rowIndex);
                                                Ext.Msg.confirm('Confirm Action', 'Do you really want to remove this Location?', function(btn) {
                                                    if(btn == 'yes'){
                                                        var store = Ext.getStore('PreceptorDataStore');
                                                        store.remove(record);
                                                        // this.fireEvent('deleteUserClick',  record,'destroy');
                                                        return true;
                                                    }
                                                }, this);
                                                return false;
                                            },
                                            iconCls: 'deleteGrid'
                                        }
                                    ]
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'pagingtoolbar',
                                    dock: 'bottom',
                                    width: 360,
                                    displayInfo: true,
                                    store: 'PreceptorDataStore'
                                }
                            ],
                            listeners: {
                                select: {
                                    fn: me.onGridpanelSelect1,
                                    scope: me
                                },
                                selectionchange: {
                                    fn: me.onGridpanelSelectionChange,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'gridpanel',
                            flex: 1,
                            dock: 'top',
                            height: 150,
                            itemId: 'DisciplinePGrid',
                            manageHeight: false,
                            title: 'Linked Disciplines',
                            forceFit: true,
                            store: 'DisciplinePStore',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'discipline',
                                    text: 'Discipline',
                                    flex: 8
                                },
                                {
                                    xtype: 'actioncolumn',
                                    align: 'center',
                                    tooltip: 'Delete a Discipline',
                                    flex: 1,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                Ext.Msg.confirm('Confirm Action', 'Do you really want to remove this discipline link?', function(btn) {
                                                    if(btn == 'yes'){
                                                        var store = Ext.getStore('DisciplinePStore');
                                                        store.remove(record);
                                                        return true;
                                                    }
                                                }, this);
                                                return false;
                                            },
                                            iconCls: 'deleteGrid'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'actioncolumn',
                                    align: 'center',
                                    tooltip: 'Link a discipline',
                                    flex: 1,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                Ext.Msg.confirm('Confirm Action', 'Do you really want to add a new discipline to this preceptor?', function(btn) {
                                                    if(btn == 'yes'){
                                                        var store = Ext.getStore('PreceptorDataStore');
                                                        //store.remove(record);
                                                        // this.fireEvent('deleteUserClick',  record,'destroy');
                                                        return true;
                                                    }
                                                }, this);
                                                return false;
                                            },
                                            iconCls: 'user_add'
                                        }
                                    ]
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'pagingtoolbar',
                                    dock: 'bottom',
                                    width: 360,
                                    displayInfo: true,
                                    store: 'DisciplinePStore'
                                },
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    items: [
                                        {
                                            xtype: 'button',
                                            itemId: 'mybutton3',
                                            iconCls: 'user_add',
                                            text: 'Link Disciplines'
                                        }
                                    ]
                                }
                            ],
                            listeners: {
                                itemdblclick: {
                                    fn: me.onDisciplinePGridItemDblClick,
                                    scope: me
                                }
                            }
                        }
                    ],
                    items: [
                        {
                            xtype: 'gridpanel',
                            flex: 1,
                            height: 150,
                            itemId: 'HospitalPGrid',
                            manageHeight: false,
                            title: 'Linked Hospitals',
                            forceFit: true,
                            store: 'HospitalPStore',
                            viewConfig: {
                                itemId: 'mygridview2'
                            },
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    dataIndex: 'name',
                                    text: 'Hospital',
                                    flex: 8
                                },
                                {
                                    xtype: 'actioncolumn',
                                    align: 'center',
                                    flex: 1,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                Ext.Msg.confirm('Confirm Action', 'Do you really want to remove this Hospital link?', function(btn) {
                                                    if(btn == 'yes'){
                                                        var store = Ext.getStore('HospitalPStore');
                                                        store.remove(record);
                                                        return true;
                                                    }
                                                }, this);
                                                return false;
                                            },
                                            iconCls: 'deleteGrid'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'actioncolumn',
                                    align: 'center',
                                    flex: 1,
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                Ext.Msg.confirm('Confirm Action', 'Do you really want to Add Hospital?', function(btn) {
                                                    if(btn == 'yes'){
                                                        var store = Ext.getStore('HospitalPStore');

                                                        return true;
                                                    }
                                                }, this);
                                                return false;
                                            },
                                            iconCls: 'user_add'
                                        }
                                    ]
                                }
                            ],
                            dockedItems: [
                                {
                                    xtype: 'pagingtoolbar',
                                    dock: 'bottom',
                                    width: 360,
                                    displayInfo: true,
                                    store: 'HospitalPStore'
                                },
                                {
                                    xtype: 'toolbar',
                                    dock: 'top',
                                    items: [
                                        {
                                            xtype: 'button',
                                            itemId: 'mybutton4',
                                            iconCls: 'user_add',
                                            text: 'Link Hospital'
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'panel',
                    flex: 2,
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    dockedItems: [
                        {
                            xtype: 'preceptorform',
                            flex: 1,
                            dock: 'top',
                            itemId: 'PreceptorViewForm',
                            iconCls: 'homeIcon',
                            title: 'Preceptor Edit/Insert'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onGridpanelSelect1: function(rowmodel, record, index, eOpts) {


        var DisciplineGrid = this.down('#DisciplinePGrid');
        var qData = record.get('precepdiscp');
        if (qData !== null) {
            DisciplineGrid.store.loadData(qData);
        } else {
            DisciplineGrid.store.clearData();
            DisciplineGrid.view.refresh();
        }


        var HospitalGrid = this.down('#HospitalPGrid');
        var hData = record.get('hospitals');
        if (hData !== null) {
            HospitalGrid.store.loadData(hData);
        } else {
            HospitalGrid.store.clearData();
            HospitalGrid.view.refresh();
        }

    },

    onGridpanelSelectionChange: function(model, selected, eOpts) {
        if (selected.length <= 0) {

            var DisciplineGrid = this.down('#DisciplinePGrid');
            DisciplineGrid.store.clearData();
            DisciplineGrid.view.refresh();


            var HospitalGrid = this.down('#HospitalPGrid');
            HospitalGrid.store.clearData();
            HospitalGrid.view.refresh();
            return;

        }
    },

    onDisciplinePGridItemDblClick: function(dataview, record, item, index, e, eOpts) {

        var view = Ext.widget('preceptordiscipline');
        console.log(view);
        view.down('form').loadRecord(record);
        view.show();

    }

});